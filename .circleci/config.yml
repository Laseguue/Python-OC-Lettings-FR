version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.12.1
      - image: circleci/postgres:12.4
        environment:
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
          POSTGRES_PASSWORD: testpassword
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: pip install -r requirements.txt
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run Linting
          command: flake8 .
      - run:
          name: Collect Static Files
          command: python manage.py collectstatic --noinput
      - run:
          name: Run Tests and Coverage
          command: |
            coverage run manage.py test
            coverage report -m --fail-under=80

  build-and-push-docker:
    docker:
      - image: cimg/python:3.12.1
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -t ghostdogthe1/python:${CIRCLE_SHA1} .
      - run:
          name: Log in to Docker Hub
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Push Docker Image to Docker Hub
          command: docker push ghostdogthe1/python:${CIRCLE_SHA1}

    
  deploy-to-heroku:
    docker:
      - image: cimg/python:3.12.1
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Heroku CLI
          command: |
            curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: Heroku Login
          command: heroku container:login
      - run:
          name: Deploy to Heroku
          command: |
            heroku container:push web --app python-oc-lettings-fr
            heroku container:release web --app python-oc-lettings-fr

workflows:
  version: 2
  build-and-test-workflow:
    jobs:
      - build-and-test
      - build-and-push-docker:
          requires:
            - build-and-test
      - deploy-to-heroku:
          requires:
            - build-and-push-docker